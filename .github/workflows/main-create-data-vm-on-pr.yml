name: Deploy GCP VM for Push to Main

on:
  push:
    branches:
        - main
    paths:
        - 'data/data-pipeline/**'
        - '.github/workflows/main-create-data-vm-on-pr.yml'
  workflow_dispatch:

jobs:
  deploy-vm:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: data-pipeline-deployment-trial
      ZONE: us-east1-d
    outputs:
      final_message: ${{ steps.deploy_vm.outputs.final_message }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
            credentials_json: '${{ secrets.GCP_SA_KEY }}'
            
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Set variables
        id: vars
        run: |
          echo "VM_NAME=vm-airflow" >> $GITHUB_ENV
          echo "BRANCH_NAME=main" >> $GITHUB_ENV

      - name: Deploy to VM
        id: deploy_vm
        run: |
            cd deployment_scripts/data-pipeline-deployment/
            echo "Setup google_cloud_key.json"
            echo '${{ secrets.GCP_SA_KEY }}' > google_cloud_key.json
            cat google_cloud_key.json
            echo "Setup .env file"
            echo "AIRFLOW_UID=1000" > .env
            echo "GOOGLE_APPLICATION_CREDENTIALS=/opt/airflow/secrets/google_cloud_key.json" >> .env
            echo "SMTP_EMAIL=${{ secrets.EMAIL_USERNAME }}" >> .env
            echo "SMTP_PASSWORD=${{ secrets.EMAIL_PASSWORD }}" >> .env
            ls -la
            echo "making pr_setup_airflow_vm.sh executable"
            chmod +x ./pr_setup_airflow_vm.sh
            echo "running pr_setup_airflow_vm.sh"
            OUTPUT=$(./pr_setup_airflow_vm.sh $VM_NAME $BRANCH_NAME $PROJECT_ID)
            echo "$OUTPUT" > script_output.log
            FINAL_MESSAGE=$(echo "$OUTPUT" | grep "Access Airflow UI at:")
            echo "final_message=$FINAL_MESSAGE" >> $GITHUB_OUTPUT

  notify:
    needs: [deploy-vm]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Notify Success
        if: needs.deploy-vm.result == 'success'
        uses: dawidd6/action-send-mail@v4
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "CI Pipeline Passed - Ready to Merge to Staging"
          to: vedantrishidas@gmail.com
          from: sanjanajd115@gmail.com
          body: |
            Main branch has been updated and deployment is successful.
            
            Final Message:
            ${{ needs.deploy-vm.outputs.final_message }}
            
      - name: Notify Failure
        if: needs.deploy-vm.result == 'failure'
        uses: dawidd6/action-send-mail@v4
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "CI Pipeline Failed"
          to: harveymailer13@gmail.com
          from: ${{ secrets.EMAIL_USERNAME }}
          body: |
            Failure in deployment to VM.
            Please check the logs for more details.
